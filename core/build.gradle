dependencies {
    api project(':rest')
    api project(':gateway')
    api project(':voice')

    api "$storesArtifact:$jdkstores_version"

    testImplementation "junit:junit:$junit_version"
    testImplementation "org.mockito:mockito-core:$mockito_version"
    testImplementation "ch.qos.logback:logback-classic:$logback_version"
    testImplementation "io.projectreactor:reactor-test"
    testImplementation "org.reflections:reflections:$reflections_version"
    testImplementation "com.sedmelluq:lavaplayer:$lavaplayer_version"
    testImplementation "io.projectreactor.tools:blockhound:$blockhound_version"
    testImplementation "io.rsocket:rsocket-core:$rsocket_version"
    testImplementation "io.rsocket:rsocket-transport-netty:$rsocket_version"
}

javadoc {
    dependsOn project(':rest').javadoc
    dependsOn project(':gateway').javadoc
    dependsOn project(':voice').javadoc

    options.linksOffline rootProject.buildDocsUrl('discord4j-common'), project(':common').javadoc.destinationDir.toURI() as String
    options.linksOffline rootProject.buildDocsUrl('discord4j-rest'), project(':rest').javadoc.destinationDir.toURI() as String
    options.linksOffline rootProject.buildDocsUrl('discord4j-gateway'), project(':gateway').javadoc.destinationDir.toURI() as String
    options.linksOffline rootProject.buildDocsUrl('discord4j-voice'), project(':voice').javadoc.destinationDir.toURI() as String

    options.linksOffline rootProject.buildStoresDocsUrl('stores-api', false), rootProject.buildStoresDocsUrl('stores-api', true)
    options.linksOffline rootProject.buildStoresDocsUrl('stores-jdk', false), rootProject.buildStoresDocsUrl('stores-jdk', true)
}
