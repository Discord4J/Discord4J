plugins {
    id 'java'
    id 'maven-publish'
    id 'com.jfrog.bintray' version '1.8.0'
    id 'com.palantir.git-version' version '0.11.0'
    id 'io.spring.dependency-management' version '1.0.4.RELEASE' apply false
}

ext {
    // Project constants
    github_org = 'Discord4J'
    project_name = 'Discord4J'
    artifact_group = 'com.discord4j'
    project_version = '3.0.0-SNAPSHOT'
    project_description = 'Java interface for the Discord API'
    project_jdk = '1.8'

    // Dependencies
    reactor_bom_version = 'Bismuth-SR10'
    jackson_version = '2.9.5'
    jsr305_version = '3.0.2'
    junit_version = '4.12'
    logback_version = '1.3.0-alpha4'
    autoservice_version = '1.0-rc4'
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'io.spring.dependency-management'
    apply plugin: 'maven-publish'
    apply plugin: 'com.jfrog.bintray'

    group = artifact_group
    version = project_version
    description = project_description

    sourceCompatibility = project_jdk
    targetCompatibility = project_jdk

    dependencyManagement {
        imports {
            mavenBom "io.projectreactor:reactor-bom:$reactor_bom_version"
        }
    }

    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://repo.spring.io/snapshot" }
        maven { url "https://repo.spring.io/milestone" }
        maven { url 'https://jitpack.io' }
    }

    tasks.withType(Javadoc) {
        options.encoding = 'UTF-8'
        options.addStringOption('encoding', 'UTF-8')
        options.tags = ["apiNote:a:API Note:",
                        "implSpec:a:Implementation Requirements:",
                        "implNote:a:Implementation Note:"]
    }

    tasks.withType(JavaCompile) {
        options.encoding = 'UTF-8'
        options.incremental = true
    }

    task downloadDependencies() {
        description 'Download all dependencies to the Gradle cache'
        doLast {
            configurations.findAll { it.canBeResolved }.files
        }
    }

    task javadocJar(type: Jar, dependsOn: javadoc) {
        classifier = 'javadoc'
        from 'build/docs/javadoc'
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    artifacts {
        archives javadocJar
        archives sourcesJar
    }

    bintray {
        user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
        key = project.hasProperty('bintrayKey') ? project.property('bintrayKey') : System.getenv('BINTRAY_KEY')
        publications = ['maven']
        dryRun = false
        publish = true
        pkg {
            userOrg = 'austinv11'
            repo = 'maven'
            name = 'Discord4J'
            websiteUrl = 'https://discord4j.com'
            issueTrackerUrl = 'https://github.com/Discord4J/Discord4J/issues'
            vcsUrl = 'https://github.com/Discord4J/Discord4J.git'
            licenses = ['LGPL-3.0']
            labels = ['discord', 'discord4j', 'd4j', 'reactor', 'nebula']
            publicDownloadNumbers = true
            attributes = [:]
            version {
                name = project.version
                vcsTag = project.version
                gpg {
                    sign = true
                }
                if (project.hasProperty('sonatypeUsername') && project.hasProperty('sonatypePassword')) {
                    def sonatypeUsername = project.property('sonatypeUsername')
                    def sonatypePassword = project.property('sonatypePassword')
                    mavenCentralSync {
                        user = sonatypeUsername
                        password = sonatypePassword
                    }
                }
            }
        }
    }
}

subprojects {
    apply plugin: 'com.palantir.git-version'
    apply plugin: 'io.spring.dependency-management'

    archivesBaseName = 'discord4j-' + project.name

    publishing {
        publications {
            maven(MavenPublication) {
                from components.java
                artifactId archivesBaseName
                artifact sourcesJar
                artifact javadocJar
            }
        }
    }

    task writeGitProperties(type: WriteProperties) {
        def details = versionDetails()
        File gitPropertiesDir = new File(project.buildDir, 'resources/main')
        File gitPropertiesFile = new File(gitPropertiesDir, 'git.properties')
        outputFile gitPropertiesFile
        inputs.dir project.files(new File(project.rootDir, '.git')).asFileTree
        def describe = details.lastTag + '-' + details.commitDistance + '-g' + details.gitHash.substring(0, 7)
        property 'application.name', 'Discord4J'
        property 'application.version', project.version
        property 'application.description', project.description
        property 'application.url', 'https://github.com/Discord4J/Discord4J'
        property 'git.branch', details.branchName ?: 'none'
        property 'git.commit.id', details.gitHashFull
        property 'git.commit.id.abbrev', details.gitHash
        property 'git.closest.tag.name', details.lastTag ?: 'none'
        property 'git.closest.tag.commit.count', details.commitDistance
        property 'git.commit.id.describe', describe
    }

    project.getTasks().getByName(JavaPlugin.CLASSES_TASK_NAME).dependsOn writeGitProperties
}

publishing {
    publications {
        maven(MavenPublication) {
        }
    }
}

bintrayUpload.dependsOn build

wrapper {
    gradleVersion = "4.9"
    distributionUrl = "https://services.gradle.org/distributions/gradle-$gradleVersion-all.zip"
}
