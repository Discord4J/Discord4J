"use strict";(self.webpackChunkdiscord4j_documentation=self.webpackChunkdiscord4j_documentation||[]).push([[415],{1927:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>t,default:()=>h,frontMatter:()=>d,metadata:()=>a,toc:()=>o});var s=i(4848),r=i(8453);const d={id:"embeds",title:"Embeds",sidebar_label:"Embeds",slug:"/embeds"},t=void 0,a={id:"How-to Guides/embeds",title:"Embeds",description:"You've likely seen embeds before. They're a great way to display information to a user in a clean way.",source:"@site/docs/04-How-to Guides/embeds.mdx",sourceDirName:"04-How-to Guides",slug:"/embeds",permalink:"/embeds",draft:!1,unlisted:!1,editUrl:"https://github.com/Discord4J/documentation/edit/master/docs/04-How-to Guides/embeds.mdx",tags:[],version:"current",lastUpdatedAt:1632536922e3,frontMatter:{id:"embeds",title:"Embeds",sidebar_label:"Embeds",slug:"/embeds"},sidebar:"mySidebar",previous:{title:"Select Menus",permalink:"/interactions/select-menus"},next:{title:"Error Handling",permalink:"/error-handling"}},l={},o=[{value:"Preview",id:"preview",level:2},{value:"Building the Embed",id:"building-the-embed",level:2},{value:"Embed Colors",id:"embed-colors",level:3},{value:"Blank Fields",id:"blank-fields",level:3},{value:"Attaching Images",id:"attaching-images",level:2},{value:"Quirks and Features",id:"quirks-and-features",level:2},{value:"Further Reading",id:"further-reading",level:2}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h2:"h2",h3:"h3",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.p,{children:"You've likely seen embeds before. They're a great way to display information to a user in a clean way."}),"\n",(0,s.jsx)(n.p,{children:"In this section we will cover how to create and customize embeds."}),"\n",(0,s.jsx)(n.h2,{id:"preview",children:"Preview"}),"\n",(0,s.jsx)(n.p,{children:"Here is an example of what embeds can look like."}),"\n",(0,s.jsx)("img",{src:"/img/embed-preview.png"}),"\n",(0,s.jsx)(n.h2,{id:"building-the-embed",children:"Building the Embed"}),"\n",(0,s.jsxs)(n.p,{children:["Discord4J uses ",(0,s.jsx)(n.a,{href:"/specs",children:"Immutable Specs"})," to build objects, for to build embeds we use ",(0,s.jsx)(n.code,{children:"EmbedCreatSpec.builder()"}),"."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'EmbedCreateSpec embed = EmbedCreateSpec.builder()\r\n    .color(Color.BLUE)\r\n    .title("Title")\r\n    .url("https://discord4j.com")\r\n    .author("Some Name", "https://discord4j.com", "https://i.imgur.com/F9BhEoz.png")\r\n    .description("a description")\r\n    .thumbnail("https://i.imgur.com/F9BhEoz.png")\r\n    .addField("field title", "value", false)\r\n    .addField("\\u200B", "\\u200B", false)\r\n    .addField("inline field", "value", true)\r\n    .addField("inline field", "value", true)\r\n    .addField("inline field", "value", true)\r\n    .image("https://i.imgur.com/F9BhEoz.png")\r\n    .timestamp(Instant.now())\r\n    .footer("footer", "https://i.imgur.com/F9BhEoz.png")\r\n    .build();\r\n\r\nclient.getChannelById(Snowflake.of(CHANNEL_ID))\r\n    .ofType(GuildMessageChannel.class)\r\n    .flatMap(channel -> channel.createMessage(embed))\r\n    .subscribe();\n'})}),"\n",(0,s.jsx)(n.p,{children:"Embeds can also be sent when the message contains content:"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'client.getChannelById(channelId)\r\n    .ofType(GuildMessageChannel.class)\r\n    .flatMap(channel -> channel.createMessage(MessageCreateSpec.builder()\r\n        .content("A meaningful quote from a good movie")\r\n        .addEmbed(embed)\r\n        .build()\r\n    )).subscribe();\n'})}),"\n",(0,s.jsx)(n.admonition,{type:"tip",children:(0,s.jsx)(n.p,{children:"All embed properties are optional. If you want a simpler embed, you can leave out what you don't want."})}),"\n",(0,s.jsx)(n.h3,{id:"embed-colors",children:"Embed Colors"}),"\n",(0,s.jsxs)(n.p,{children:["Discord4J uses a custom ",(0,s.jsx)(n.code,{children:"Color"})," class when a color param is needed. But, you may want more color choices than the default enum provides."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:"Color rgbColor = Color.of(rr, gg, bb);\r\n\r\nColor hexColor = Color.of(0xAABBCC);\n"})}),"\n",(0,s.jsx)(n.h3,{id:"blank-fields",children:"Blank Fields"}),"\n",(0,s.jsxs)(n.p,{children:['Discord enforces that embed fields and their values contain characters. However, you can "bypass" this restriction by using a zero-width space. To use a ZWS, just use ',(0,s.jsx)(n.code,{children:'"\\u200B"'})," as shown in the example above."]}),"\n",(0,s.jsx)(n.h2,{id:"attaching-images",children:"Attaching Images"}),"\n",(0,s.jsx)(n.p,{children:"Like other messages, images can be directly attached to the message and the embed can use the image from the attachment."}),"\n",(0,s.jsxs)(n.p,{children:["Using ",(0,s.jsx)(n.code,{children:"attachment://filename.extension"})," as the image URL, an embed can reference the image attached."]}),"\n",(0,s.jsxs)(n.admonition,{type:"tip",children:[(0,s.jsx)(n.p,{children:"If you plan on attaching the same image many times, consider hosting it online and providing the URL to it."}),(0,s.jsx)(n.p,{children:"This helps reduce your bandwidth and increase bot response time as you no longer need to upload the image every time its embedded."})]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{className:"language-java",children:'EmbedCreateSpec embed = EmbedCreateSpec.builder()\r\n    ...\r\n    .image("attachment://file-name.png")\r\n    .build();\r\n\r\nclient.getChannelById(channelId)\r\n    .ofType(GuildMessageChannel.class)\r\n    .flatMap(channel -> channel.createMessage(MessageCreateSpec.builder()\r\n        .content("content? content")\r\n        .addFile("file-name.png", fileAsInputStream)\r\n        .addEmbed(embed)\r\n        .build()\r\n    )).subscribe();\n'})}),"\n",(0,s.jsx)(n.h2,{id:"quirks-and-features",children:"Quirks and Features"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["If you want 2 or more fields side-by-side, they must have ",(0,s.jsx)(n.code,{children:"inline: true"})]}),"\n",(0,s.jsx)(n.li,{children:"The timestamp in the footer, like other timestamps across the client, adjusts to the user's locale"}),"\n",(0,s.jsx)(n.li,{children:"Mentions will only render correctly in the description and field values."}),"\n",(0,s.jsx)(n.li,{children:"Mentions in embeds will not ping users"}),"\n",(0,s.jsx)(n.li,{children:"Embeds allow markdown. Field values and description support markdown links."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"However, there are some limitations to embeds"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Titles are limited to ",(0,s.jsx)(n.code,{children:"256"})," characters"]}),"\n",(0,s.jsxs)(n.li,{children:["Descriptions are limited to ",(0,s.jsx)(n.code,{children:"4096"})," characters"]}),"\n",(0,s.jsxs)(n.li,{children:["Each embed can have up to ",(0,s.jsx)(n.code,{children:"25"})," fields"]}),"\n",(0,s.jsxs)(n.li,{children:["A field's name is limited to ",(0,s.jsx)(n.code,{children:"256"})," characters and its value to ",(0,s.jsx)(n.code,{children:"1024"})," characters"]}),"\n",(0,s.jsxs)(n.li,{children:["The footer is limited to ",(0,s.jsx)(n.code,{children:"2048"})," characters"]}),"\n",(0,s.jsxs)(n.li,{children:["The author name is limited to ",(0,s.jsx)(n.code,{children:"256"})," characters"]}),"\n",(0,s.jsxs)(n.li,{children:["Up to ",(0,s.jsx)(n.code,{children:"10"})," embeds can be included in a single message"]}),"\n",(0,s.jsxs)(n.li,{children:["The total length (of the raw json) of all embeds in a message cannot exceed ",(0,s.jsx)(n.code,{children:"6000"})," characters"]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"And the biggest thing to remember:\r\nEmbeds are rendered client-side and as such, may look different screen-to-screen depending on screen size."}),"\n",(0,s.jsx)(n.p,{children:"It's always a good idea to plan out and test how your embeds look on desktop and mobile screens."}),"\n",(0,s.jsx)(n.h2,{id:"further-reading",children:"Further Reading"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"/specs",children:"Reference - Specs"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://discord.com/developers/docs/resources/channel#embed-limits",children:"Discord Docs - Embed Limits"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.a,{href:"https://autocode.com/tools/discord/embed-builder/",children:"Autocode Embed Visualizer (unaffiliated)"})}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>t,x:()=>a});var s=i(6540);const r={},d=s.createContext(r);function t(e){const n=s.useContext(d);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:t(e.components),s.createElement(d.Provider,{value:n},e.children)}}}]);