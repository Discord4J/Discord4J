"use strict";(self.webpackChunkdiscord4j_documentation=self.webpackChunkdiscord4j_documentation||[]).push([[355],{2772:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>h,frontMatter:()=>r,metadata:()=>l,toc:()=>o});var s=i(4848),t=i(8453);const r={id:"whats-new-in-v3-2",title:"What's new in v3.2",sidebar_label:"What's new in v3.2",slug:"/whats-new-in-v3-2"},d=void 0,l={id:"Reference/whats-new-in-v3-2",title:"What's new in v3.2",description:"Maintenance mode for v3.1",source:"@site/docs/05-Reference/whats-new-in-v3.2.mdx",sourceDirName:"05-Reference",slug:"/whats-new-in-v3-2",permalink:"/whats-new-in-v3-2",draft:!1,unlisted:!1,editUrl:"https://github.com/Discord4J/documentation/edit/master/docs/05-Reference/whats-new-in-v3.2.mdx",tags:[],version:"current",lastUpdatedAt:1632891245e3,frontMatter:{id:"whats-new-in-v3-2",title:"What's new in v3.2",sidebar_label:"What's new in v3.2",slug:"/whats-new-in-v3-2"},sidebar:"mySidebar",previous:{title:"What's new in v3.1",permalink:"/whats-new-in-v3-1"},next:{title:"Lambda Tutorial",permalink:"/lambda-tutorial"}},c={},o=[{value:"Maintenance mode for v3.1",id:"maintenance-mode-for-v31",level:2},{value:"Features",id:"features",level:2},{value:"New entity cache abstraction: <code>Store</code>",id:"new-entity-cache-abstraction-store",level:3},{value:"New immutable spec API",id:"new-immutable-spec-api",level:3},{value:"Preparing for threads",id:"preparing-for-threads",level:3},{value:"API changes",id:"api-changes",level:2},{value:"Signature changes",id:"signature-changes",level:3},{value:"Updates due to new Reactor API",id:"updates-due-to-new-reactor-api",level:4},{value:"Changes around Message mentions #858",id:"changes-around-message-mentions-858",level:4},{value:"Changes around UserData direct usage #898",id:"changes-around-userdata-direct-usage-898",level:4},{value:"Data type changes from Discord",id:"data-type-changes-from-discord",level:4},{value:"Audit log changes #899",id:"audit-log-changes-899",level:4},{value:"New types",id:"new-types",level:3},{value:"Moved and renamed types",id:"moved-and-renamed-types",level:3},{value:"Removed types",id:"removed-types",level:3},{value:"Deprecations",id:"deprecations",level:3},{value:"Multiple embeds in a message #950",id:"multiple-embeds-in-a-message-950",level:4},{value:"Prepare new channel hierarchy for threads #959",id:"deprecations-for-threads-in-3-1",level:4},{value:"Additions",id:"additions",level:3},{value:"Renames",id:"renames",level:3},{value:"Removals",id:"removals",level:3},{value:"Behavior changes",id:"behavior-changes",level:2}];function a(e){const n={a:"a",code:"code",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",ul:"ul",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h2,{id:"maintenance-mode-for-v31",children:"Maintenance mode for v3.1"}),"\n",(0,s.jsx)(n.p,{children:"After v3.2.0 releases, only bugfixes will be accepted in the 3.1.x branch."}),"\n",(0,s.jsx)(n.h2,{id:"features",children:"Features"}),"\n",(0,s.jsxs)(n.h3,{id:"new-entity-cache-abstraction-store",children:["New entity cache abstraction: ",(0,s.jsx)(n.code,{children:"Store"})]}),"\n",(0,s.jsx)(n.p,{children:'While developing v3.1.x some limitations were encountered if trying to implement a custom entity cache pursuing\r\nefficiency, as a given abstraction to organize data was fixed on implementations ("9-Store layout"), that forced\r\ncache operations around a generic find/save set of operations, without taking into consideration the relational aspect\r\nsome entities have and could be leveraged for improved performance.'}),"\n",(0,s.jsxs)(n.p,{children:["To address this and other problems, an abstraction named ",(0,s.jsx)(n.code,{children:"Store"})," is introduced in ",(0,s.jsx)(n.a,{href:"https://github.com/Discord4J/Discord4J/pull/788",children:"#788"}),"\r\naround a command-oriented pattern by requiring a single method: ",(0,s.jsx)(n.code,{children:"execute(StoreAction)"}),". This method is responsible for\r\nreceiving both Gateway updates and user-facing queries, giving implementations no restrictions, but tools that help with the process."]}),"\n",(0,s.jsx)(n.p,{children:"Some of the most notable components added:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"StoreLayout"}),": the minimal set of methods that are required to support a Discord cache: Gateway updates, and data-access queries"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ActionMapper"}),": a registry for ",(0,s.jsx)(n.code,{children:"StoreAction"})," instances passed to the ",(0,s.jsx)(n.code,{children:"Store"})]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"ReadActions"}),": all queries placed in a convenient class, to build actions"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"DispatchStoreLayer"}),": introduce caching capabilities to users operating exclusively with the ",(0,s.jsx)(n.code,{children:"gateway"})," module"]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:["Regarding project organization, ",(0,s.jsx)(n.code,{children:"Store"})," now lives in the ",(0,s.jsx)(n.code,{children:"discord4j-common"})," module, dropping the dependency on ",(0,s.jsx)(n.code,{children:"stores-api"}),".\r\nThis also means structures like ",(0,s.jsx)(n.code,{children:"StateHolder"})," and ",(0,s.jsx)(n.code,{children:"StateView"})," are no longer present. Check the ",(0,s.jsx)(n.a,{href:"/migrating-from-v3-1-to-v3-2#directly-querying-a-store",children:"migration guide"})," for details."]}),"\n",(0,s.jsx)(n.h3,{id:"new-immutable-spec-api",children:"New immutable spec API"}),"\n",(0,s.jsxs)(n.p,{children:["After receiving feedback regarding ",(0,s.jsx)(n.code,{children:"Consumer"}),"-based request builders, a new set of APIs were introduced in ",(0,s.jsx)(n.a,{href:"https://github.com/Discord4J/Discord4J/pull/927",children:"#927"}),",\r\naiming to help with API request building. Multiple patterns are available so please check the ",(0,s.jsx)(n.a,{href:"specs",children:"Specs"})," page for more information."]}),"\n",(0,s.jsx)(n.h3,{id:"preparing-for-threads",children:"Preparing for threads"}),"\n",(0,s.jsxs)(n.p,{children:["In order to easily migrate to a new channel hierarchy supporting threads, some changes were applied to v3.2 ",(0,s.jsx)(n.a,{href:"#deprecations-for-threads-in-3-1",children:"deprecating"}),"\r\nmethods that won't be available in v3.3 after thread channels are implemented in ",(0,s.jsx)(n.a,{href:"https://github.com/Discord4J/Discord4J/pull/923",children:"#923"}),"."]}),"\n",(0,s.jsx)(n.h2,{id:"api-changes",children:"API changes"}),"\n",(0,s.jsx)(n.h3,{id:"signature-changes",children:"Signature changes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Slash command methods that previously took ",(0,s.jsx)(n.code,{children:"WebhookMultipartRequest"})," now take ",(0,s.jsx)(n.code,{children:"MultipartRequest<WebhookExecuteRequest>"})," and can be built using one of its static factory methods"]}),"\n",(0,s.jsxs)(n.li,{children:["Optional returns from Message.Embed methods (previously returning ",(0,s.jsx)(n.code,{children:"null"}),") ",(0,s.jsx)(n.a,{href:"https://github.com/Discord4J/Discord4J/pull/749",children:"#749"})]}),"\n",(0,s.jsxs)(n.li,{children:["GatewayResources::getIntents return type changes from ",(0,s.jsx)(n.code,{children:"Possible<IntentSet>"})," to ",(0,s.jsx)(n.code,{children:"IntentSet"})]}),"\n",(0,s.jsxs)(n.li,{children:["RestGuild::modifyMember and GuildService::modifyGuildMember return type changes from ",(0,s.jsx)(n.code,{children:"Mono<Void>"})," to ",(0,s.jsx)(n.code,{children:"Mono<MemberData>"})]}),"\n",(0,s.jsxs)(n.li,{children:["Message::getAttachments return type changes from ",(0,s.jsx)(n.code,{children:"Set<Attachment>"})," to ",(0,s.jsx)(n.code,{children:"List<Attachment>"})]}),"\n",(0,s.jsxs)(n.li,{children:["DiscordWebClient supports a custom baseUrl ",(0,s.jsx)(n.a,{href:"https://github.com/Discord4J/Discord4J/pull/902",children:"#902"})]}),"\n",(0,s.jsxs)(n.li,{children:["ChannelService::editMessage 3rd parameter changes from ",(0,s.jsx)(n.code,{children:"MessageEditRequest"})," to ",(0,s.jsx)(n.code,{children:"MultipartRequest<MessageEditRequest>"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["If you used this method before, you can wrap the old request using ",(0,s.jsx)(n.code,{children:"MultipartRequest.ofRequest(request)"})]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"updates-due-to-new-reactor-api",children:"Updates due to new Reactor API"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["GatewayClient::close return type changes from ",(0,s.jsx)(n.code,{children:"Mono<Void>"})," to ",(0,s.jsx)(n.code,{children:"Mono<CloseStatus>"})]}),"\n",(0,s.jsxs)(n.li,{children:["GatewayClient::sender return type changes from ",(0,s.jsx)(n.code,{children:"FluxSink<GatewayPayload<?>>"})," to ",(0,s.jsx)(n.code,{children:"Sinks.Many<GatewayPayload<?>>"})]}),"\n"]}),"\n",(0,s.jsxs)(n.h4,{id:"changes-around-message-mentions-858",children:["Changes around Message mentions ",(0,s.jsx)(n.a,{href:"https://github.com/Discord4J/Discord4J/pull/858",children:"#858"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Message::getUserMentionIds return type changes from ",(0,s.jsx)(n.code,{children:"Set<Snowflake>"})," to ",(0,s.jsx)(n.code,{children:"List<Snowflake>"})]}),"\n",(0,s.jsxs)(n.li,{children:["Message::getUserMentions return type changes from ",(0,s.jsx)(n.code,{children:"Flux<User>"})," to ",(0,s.jsx)(n.code,{children:"List<User>"})]}),"\n",(0,s.jsxs)(n.li,{children:["Message::getRoleMentionIds return type changes from ",(0,s.jsx)(n.code,{children:"Set<Snowflake>"})," to ",(0,s.jsx)(n.code,{children:"List<Snowflake>"})]}),"\n",(0,s.jsxs)(n.li,{children:["Message::getReactions return type changes from ",(0,s.jsx)(n.code,{children:"Set<Reaction>"})," to ",(0,s.jsx)(n.code,{children:"List<Reaction>"})]}),"\n"]}),"\n",(0,s.jsxs)(n.h4,{id:"changes-around-userdata-direct-usage-898",children:["Changes around UserData direct usage ",(0,s.jsx)(n.a,{href:"https://github.com/Discord4J/Discord4J/pull/898",children:"#898"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["PrivateChannel::getRecipients return type changes from ",(0,s.jsx)(n.code,{children:"Flux<User>"})," to ",(0,s.jsx)(n.code,{children:"Set<User>"})]}),"\n",(0,s.jsxs)(n.li,{children:["Invite::getInviter return type changes from ",(0,s.jsx)(n.code,{children:"Mono<User>"})," to ",(0,s.jsx)(n.code,{children:"Optional<User>"})]}),"\n",(0,s.jsxs)(n.li,{children:["Inviter::getTargetUser return type changes from ",(0,s.jsx)(n.code,{children:"Mono<User>"})," to ",(0,s.jsx)(n.code,{children:"Optional<User>"})]}),"\n"]}),"\n",(0,s.jsx)(n.h4,{id:"data-type-changes-from-discord",children:"Data type changes from Discord"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Member::getJoinTime return type changes from ",(0,s.jsx)(n.code,{children:"Instant"})," to ",(0,s.jsx)(n.code,{children:"Optional<Instant>"})]}),"\n",(0,s.jsxs)(n.li,{children:["MemberUpdateEvent::getJoinTime return type changes from ",(0,s.jsx)(n.code,{children:"Instant"})," to ",(0,s.jsx)(n.code,{children:"Optional<Instant>"})]}),"\n"]}),"\n",(0,s.jsxs)(n.h4,{id:"audit-log-changes-899",children:["Audit log changes ",(0,s.jsx)(n.a,{href:"https://github.com/Discord4J/Discord4J/pull/899",children:"#899"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["ChangeKey.ROLES_ADD and ChangeKey.ROLES_REMOVE type change from ",(0,s.jsx)(n.code,{children:"ChangeKey<Set<Role>>"})," to ",(0,s.jsx)(n.code,{children:"ChangeKey<Set<AuditLogRole>>"})," to properly reflect the data type returned from Discord. Contains ",(0,s.jsx)(n.code,{children:"id"})," and ",(0,s.jsx)(n.code,{children:"name"}),"."]}),"\n",(0,s.jsxs)(n.li,{children:["OptionKey.DELETE_MEMBER_DAYS and OptionKey.MEMBERS_REMOVED type change from ",(0,s.jsx)(n.code,{children:"OptionKey<String>"})," to ",(0,s.jsx)(n.code,{children:"OptionKey<Integer>"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"new-types",children:"New types"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Store, StoreLayout and others related to the Store rework ",(0,s.jsx)(n.a,{href:"https://github.com/Discord4J/Discord4J/pull/788",children:"#788"})]}),"\n",(0,s.jsxs)(n.li,{children:["ClientPresence and ClientActivity to be used when setting the bot's status ",(0,s.jsx)(n.a,{href:"https://github.com/Discord4J/Discord4J/pull/874",children:"#874"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"moved-and-renamed-types",children:"Moved and renamed types"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Due to immutable specs ",(0,s.jsx)(n.a,{href:"https://github.com/Discord4J/Discord4J/pull/927",children:"#927"}),", Consumer-based ",(0,s.jsx)(n.code,{children:"XXSpec"})," classes are now located at ",(0,s.jsx)(n.code,{children:"discord4j.core.spec.legacy"})," package and renamed to ",(0,s.jsx)(n.code,{children:"LegacyXXSpec"}),". They are deprecated to encourage usage of the new patterns, and might be removed in a future release"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"removed-types",children:"Removed types"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"PrivateChannelCreateEvent"}),"\n",(0,s.jsx)(n.li,{children:"StateView"}),"\n",(0,s.jsx)(n.li,{children:"InvalidationStrategy"}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"deprecations",children:"Deprecations"}),"\n",(0,s.jsxs)(n.h4,{id:"multiple-embeds-in-a-message-950",children:["Multiple embeds in a message ",(0,s.jsx)(n.a,{href:"https://github.com/Discord4J/Discord4J/pull/950",children:"#950"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"MessageCreateSpec::setEmbed"})," and ",(0,s.jsx)(n.code,{children:"MessageEditSpec::setEmbed"})]}),"\n",(0,s.jsxs)(n.li,{children:["Use new specs or ",(0,s.jsx)(n.code,{children:"addEmbed(Consumer)"})," or ",(0,s.jsx)(n.code,{children:"removeEmbeds()"})]}),"\n"]}),"\n",(0,s.jsxs)(n.h4,{id:"deprecations-for-threads-in-3-1",children:["Prepare new channel hierarchy for threads ",(0,s.jsx)(n.a,{href:"https://github.com/Discord4J/Discord4J/pull/959",children:"#959"})]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"GuildChannel"})," methods moving to ",(0,s.jsx)(n.code,{children:"TopLevelGuildChannel"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"getPermissionOverwrites"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"getOverwriteForMember"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"getOverwriteForRole"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"getRawPosition"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"getPosition"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"addMemberOverwrite"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"addRoleOverwrite"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"GuildMessageChannel"})," methods moving to ",(0,s.jsx)(n.code,{children:"TopLevelGuildMessageChannel"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"getTopic"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"createWebhook"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"getWebhooks"})}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.code,{children:"GuildMessageChannel"})," should no longer be treated as a subtype of ",(0,s.jsx)(n.code,{children:"CategorizableChannel"}),'. These methods are deprecated "for removal"',"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"getCategoryId"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"getCategory"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"createInvite"})}),"\n",(0,s.jsx)(n.li,{children:(0,s.jsx)(n.code,{children:"getInvites"})}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"additions",children:"Additions"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"IntentSet.nonPrivileged() is the new default"}),"\n",(0,s.jsxs)(n.li,{children:["MemberUpdateEvent::getCurrentRoles returns a ",(0,s.jsx)(n.code,{children:"Flux<Role>"})," ",(0,s.jsx)(n.a,{href:"https://github.com/Discord4J/Discord4J/pull/807",children:"#807"})]}),"\n",(0,s.jsxs)(n.li,{children:["New API to get self member ",(0,s.jsx)(n.a,{href:"https://github.com/Discord4J/Discord4J/pull/871",children:"#871"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"EntityRetriever.getSelfMember(guildId)"}),"\n",(0,s.jsx)(n.li,{children:"RestClient.selfRestMember(guildId)"}),"\n",(0,s.jsx)(n.li,{children:"RestClient.getSelfMember(guildId)"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Member-based permission calculation ",(0,s.jsx)(n.a,{href:"https://github.com/Discord4J/Discord4J/pull/873",children:"#873"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"GuildChannel.getEffectivePermissions(Member)"}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["Audit log changes ",(0,s.jsx)(n.a,{href:"https://github.com/Discord4J/Discord4J/pull/899",children:"#899"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["Guild::getAuditLog methods now return ",(0,s.jsx)(n.code,{children:"Flux<AuditLogPart>"})," to provide easier access to all related entities"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"renames",children:"Renames"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["MemberUpdateEvent::getCurrentRoles renamed to MemberUpdateEvent::getCurrentRoleIds ",(0,s.jsx)(n.a,{href:"https://github.com/Discord4J/Discord4J/pull/807",children:"#807"})]}),"\n"]}),"\n",(0,s.jsx)(n.h3,{id:"removals",children:"Removals"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Guild ::getEmbedChannel / ::getEmbedChannelId (was deprecated in 3.1.x, use getWidget*)"}),"\n",(0,s.jsx)(n.li,{children:"RestGuild ::getEmbed / ::modifyEmbed (was deprecated in 3.1.x, use getWidget & modifyWidget)"}),"\n",(0,s.jsxs)(n.li,{children:["Removals due to new Store API, see ",(0,s.jsx)(n.a,{href:"migrating-from-v3-1-to-v3-2#new-entity-cache-api",children:"migration notes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"GatewayResources::getStateView (replaced with ::getStore)"}),"\n",(0,s.jsx)(n.li,{children:"GatewayBootstrap::setStoreService (replaced with ::setStore)"}),"\n",(0,s.jsxs)(n.li,{children:["GatewayBootstrap::setInvalidationStrategy (look for ",(0,s.jsx)(n.code,{children:"StorageConfig"})," builder for a replacement)"]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(n.li,{children:["RestGuild::getIntegrations(boolean) and GuildService::getGuildIntegrations(long, boolean) ",(0,s.jsx)(n.a,{href:"https://github.com/Discord4J/Discord4J/pull/803",children:"#803"})]}),"\n",(0,s.jsxs)(n.li,{children:["Message::getUserMentions(EntityRetrievalStrategy) (no fetching strategy needed) ",(0,s.jsx)(n.a,{href:"https://github.com/Discord4J/Discord4J/pull/858",children:"#858"})]}),"\n",(0,s.jsxs)(n.li,{children:["UserService::getUserDMs (deprecated endpoint) ",(0,s.jsx)(n.a,{href:"https://github.com/Discord4J/Discord4J/pull/890",children:"#890"})]}),"\n",(0,s.jsxs)(n.li,{children:["Use provided data over cached one where possible ",(0,s.jsx)(n.a,{href:"https://github.com/Discord4J/Discord4J/pull/898",children:"#898"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Invite::getInviter(EntityRetrievalStrategy) (no fetching strategy needed)"}),"\n",(0,s.jsx)(n.li,{children:"Invite::getTargetUser(EntityRetrievalStrategy) (no fetching strategy needed)"}),"\n",(0,s.jsx)(n.li,{children:"PrivateChannel::getRecipients(EntityRetrievalStrategy) (no fetching strategy needed)"}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"behavior-changes",children:"Behavior changes"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"As part of v8 and above changes, Intents are mandatory so the new default if you don't set any will be IntentSet.nonPrivileged()"}),"\n",(0,s.jsx)(n.li,{children:"Default to MemberRequestFilter.none if missing GUILD_MEMBERS intent"}),"\n",(0,s.jsxs)(n.li,{children:["RestGuild::getData now includes with_counts = true by default ",(0,s.jsx)(n.a,{href:"https://github.com/Discord4J/Discord4J/pull/826",children:"#826"})]}),"\n"]})]})}function h(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(a,{...e})}):a(e)}},8453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>l});var s=i(6540);const t={},r=s.createContext(t);function d(e){const n=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:d(e.components),s.createElement(r.Provider,{value:n},e.children)}}}]);