"use strict";(self.webpackChunkdiscord4j_documentation=self.webpackChunkdiscord4j_documentation||[]).push([[342],{4228:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>u,frontMatter:()=>a,metadata:()=>r,toc:()=>l});var o=n(4848),i=n(8453);const a={id:"auto-complete",title:"Auto Complete",sidebar_label:"Auto Complete",slug:"/interactions/auto-complete"},s=void 0,r={id:"How-to Guides/Interactions/auto-complete",title:"Auto Complete",description:"This page is a continuation of the Interactions (Reference) which dives into what Interactions are.",source:"@site/docs/04-How-to Guides/Interactions/auto-complete.mdx",sourceDirName:"04-How-to Guides/Interactions",slug:"/interactions/auto-complete",permalink:"/interactions/auto-complete",draft:!1,unlisted:!1,editUrl:"https://github.com/Discord4J/documentation/edit/master/docs/04-How-to Guides/Interactions/auto-complete.mdx",tags:[],version:"current",lastUpdatedAt:1636678153e3,frontMatter:{id:"auto-complete",title:"Auto Complete",sidebar_label:"Auto Complete",slug:"/interactions/auto-complete"},sidebar:"mySidebar",previous:{title:"Application Commands",permalink:"/interactions/application-commands"},next:{title:"Buttons",permalink:"/interactions/buttons"}},c={},l=[{value:"Enabling Auto Complete",id:"enabling-auto-complete",level:2},{value:"Receiving and Responding",id:"receiving-and-responding",level:2},{value:"Further Reading",id:"further-reading",level:2}];function d(e){const t={a:"a",admonition:"admonition",code:"code",em:"em",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.admonition,{type:"note",children:(0,o.jsxs)(t.p,{children:["This page is a continuation of the ",(0,o.jsx)(t.a,{href:"/interactions",children:"Interactions (Reference)"})," which dives into ",(0,o.jsx)(t.em,{children:"what"})," Interactions are."]})}),"\n",(0,o.jsx)(t.admonition,{type:"note",children:(0,o.jsx)(t.p,{children:"Auto complete is currently only available for chat input commands."})}),"\n",(0,o.jsx)(t.h2,{id:"enabling-auto-complete",children:"Enabling Auto Complete"}),"\n",(0,o.jsxs)(t.p,{children:["To enable auto complete, just add ",(0,o.jsx)(t.code,{children:"autocomplete: true"})," to a command option that supports autocomplete. It can only be\r\nadded to the ",(0,o.jsx)(t.code,{children:"STRING"}),", ",(0,o.jsx)(t.code,{children:"NUMBER"}),", and ",(0,o.jsx)(t.code,{children:"INTEGER"})," type options. Autocomplete cannot be used on commands that have ",(0,o.jsx)(t.code,{children:"choices"}),"\r\nprovided."]}),"\n",(0,o.jsx)(t.h2,{id:"receiving-and-responding",children:"Receiving and Responding"}),"\n",(0,o.jsx)(t.p,{children:"Once auto complete is enabled on a command option, discord will automatically start sending auto complete interactions\r\nwhen a user is typing the parameter."}),"\n",(0,o.jsx)(t.admonition,{type:"caution",children:(0,o.jsx)(t.p,{children:"Auto complete choices are only a suggestion! The user can choose to ignore the suggestions and input a custom value."})}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{className:"language-java",children:'client.on(ChatInputAutoCompleteEvent.class, event -> {\r\n    if (event.getCommandName().equals("commandName")) {\r\n        // Get the string value of what the user is currently typing\r\n        String typing = event.getFocusedOption().getValue()\r\n                .map(ApplicationCommandInteractionOptionValue::asString)\r\n                .orElse(""); // In case the user has not started typing, we return an empty string\r\n\r\n        /*\r\n        Build a list of choices to present to the user as suggested input\r\n\r\n        For the sake of simplicity in this demo, we are returning a static list here.\r\n        Ideally you would use fuzzy matching or other techniques to suggest up to 25 choices for the user.\r\n        */\r\n        List<ApplicationCommandOptionChoiceData> suggestions = new ArrayList<>();\r\n\r\n        suggestions.add(ApplicationCommandOptionChoiceData.builder().name("Thing 1").value("value").build());\r\n        suggestions.add(ApplicationCommandOptionChoiceData.builder().name("Something 2").value("other").build());\r\n        suggestions.add(ApplicationCommandOptionChoiceData.builder().name("some other input").value("pick me").build());\r\n\r\n        // Finally, return the list of choices to the user\r\n        return event.respondWithSuggestions(suggestions);\r\n    }\r\n}).subscribe();\n'})}),"\n",(0,o.jsx)(t.p,{children:'Unlike other interactions, autocomplete cannot be deferred and only has one way to respond.\r\nThe bot must respond within 3 seconds, failure to do so will result in a "soft failure" in the discord client; the user\r\nwill still be able to use the command,but the autocomplete box will show an error.'}),"\n",(0,o.jsx)(t.h2,{id:"further-reading",children:"Further Reading"}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"/examples",children:"Reference - Examples"})}),"\n",(0,o.jsx)(t.li,{children:(0,o.jsx)(t.a,{href:"https://discord.com/developers/docs/interactions/application-commands#autocomplete",children:"Discord Docs - Auto Complete"})}),"\n"]})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},8453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>r});var o=n(6540);const i={},a=o.createContext(i);function s(e){const t=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(a.Provider,{value:t},e.children)}}}]);